document.addEventListener("DOMContentLoaded",(function(){if(document.querySelector(".carousel")){const h=document.querySelector(".carousel"),v=document.querySelector(".carousel-prev"),y=document.querySelector(".carousel-next"),g=h.querySelectorAll(".carousel-item");let E=0;const f=g.length;function e(){const e=g[E];e.classList.add("outgoing-next"),E=(E+1)%f;g[E].classList.add("active"),setTimeout((()=>{e.classList.remove("outgoing-next","active")}),800)}g[E].classList.add("active");const L=setInterval(e,5e3);y.addEventListener("click",(function(){clearInterval(L),e()})),v.addEventListener("click",(function(){clearInterval(L),function(){const e=g[E];e.classList.add("outgoing-prev"),E=(E-1+f)%f;const t=g[E];t.classList.add("active","incoming-prev"),setTimeout((()=>{e.classList.remove("outgoing-prev","active"),t.classList.remove("incoming-prev")}),800)}()}))}const t=document.querySelector(".search-bar-input"),n=document.querySelector(".search-results");t.addEventListener("input",(function(){const e=this.value.trim();e.length>2?fetch(`/search?query=${encodeURIComponent(e)}`).then((e=>e.json())).then((e=>{n.innerHTML="",e.length>0?(n.style.display="block",e.forEach((e=>{const t=document.createElement("div");t.classList.add("search-result-item"),t.innerHTML=`\n                <a href="/movie/${e.id}">\n                  <img src="${e.image}" alt="${e.title}">\n                  <span>${e.title}</span>\n                </a>\n              `,n.appendChild(t)}))):n.innerHTML="<p>No results found</p>"})).catch((e=>{console.error("Error fetching search results:",e)})):(n.style.display="none",n.innerHTML="")})),t.addEventListener("keydown",(function(e){if("Enter"===e.key){const e=t.value.trim();e.length>2&&(window.location.href=`/search-title?title=${encodeURIComponent(e)}`)}})),document.addEventListener("click",(function(e){t.contains(e.target)||n.contains(e.target)||(n.style.display="none")}));const o=document.getElementById("openModal"),s=document.getElementById("closeModal"),d=document.getElementById("modalOverlay"),r=document.getElementById("addUserModal"),c=document.getElementById("addUserForm");o.addEventListener("click",(function(e){e.preventDefault(),d.classList.add("modal-show")})),s.addEventListener("click",(function(){d.classList.remove("modal-show")})),r.addEventListener("click",(function(e){e.stopPropagation()})),d.addEventListener("click",(function(e){e.target===d&&d.classList.remove("modal-show")})),c.addEventListener("submit",(function(e){e.preventDefault();const t=new FormData(c);fetch("/admin/create-user",{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:t}).then((e=>{e.ok?(alert("User added successfully!"),c.reset(),d.classList.remove("modal-show"),location.reload()):alert("Error adding user")})).catch((e=>console.error("Error adding user:",e)))}));const a=document.querySelectorAll(".edit-btn"),i=document.getElementById("editUserModal"),l=document.getElementById("editUserModalOverlay"),u=document.getElementById("closeEditModal"),m=document.getElementById("editUserForm");a.forEach((e=>{e.addEventListener("click",(function(){const e=this.getAttribute("data-id"),t=this.getAttribute("data-email"),n=this.getAttribute("data-role");document.getElementById("editUserId").value=e,document.getElementById("editEmail").value=t,document.getElementById("editRole").value=n,l.style.display="flex",i.classList.add("modal-show")}))})),u.addEventListener("click",(function(){l.style.display="none",i.classList.remove("modal-show")})),window.addEventListener("click",(function(e){e.target===l&&(l.style.display="none",i.classList.remove("modal-show"))})),m.addEventListener("submit",(function(e){e.preventDefault();const t=new FormData(m);fetch("/admin/edit-user",{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:t}).then((e=>{e.ok?(alert("User updated successfully!"),l.style.display="none",location.reload()):alert("Error updating user.")})).catch((e=>console.error("Error updating user:",e)))}));document.querySelectorAll(".delete-btn").forEach((e=>{e.addEventListener("click",(function(e){e.preventDefault();const t=this.getAttribute("data-id");confirm("Are you sure you want to delete this user?")&&fetch("/admin/delete-user",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","X-Requested-With":"XMLHttpRequest"},body:`id=${encodeURIComponent(t)}`}).then((e=>{e.ok?location.reload():alert("Error deleting user.")})).catch((e=>console.error("Error deleting user:",e)))}))}))}));